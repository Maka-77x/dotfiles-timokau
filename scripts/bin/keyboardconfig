#!/usr/bin/env nix-shell
#! nix-shell --pure -i bash -p xcape -p xorg.setxkbmap -p xorg.xmodmap -p killall nixos.procps unixtools.watch xorg.xinput coreutils
# NIX:PATH xcape:xorg.setxkbmap:xorg.xmodmap:unixtools.watch:xorg.xinput:coreutils

# Customize the (German) keyboard with xmodmap and xcape

# Configure all connected keyboards once. Starts xcape in the background, does
# not block.
configure_keyboards() {
	# Reset
	killall --signal SIGKILL xcape
	setxkbmap de \
		-option ctrl:swapcaps # \
		#-option lv3:win_switch # use win as Alt_Gr

	xmodmap - <<EOF

	! make backtick key alive
	keysym dead_acute = acute grave

	! make backslash usable (I never needed ยง anyway)
	keysym 3 = 3 backslash

	! Use rctrl as a play/pause media key (for usage when my handy aren't on the homerow)
	! since it is nearly unreachable when my hands are on the homerow anyway
	remove Control = Control_R
	keysym Control_R = XF86AudioPlay

	! Use the 'รถ' key (right of l on the German keyboard) as an extra modifier
	! when pressed with some other key. xcape is later used to restore the
	! default behaviour when pressed alone.
	keysym odiaeresis = Hyper_L
	keycode 255 = odiaeresis
EOF

	# -d so that it won't fork, sed so it won't print a keylogger output into the system log (censor
	# keycodes)
	xcape -d -e "Hyper_L=odiaeresis;Control_L=Escape" 2>&1 | sed -e 's/0x[0-9a-fA-F]\+/xx/g' -e 's/[0-9]/x/g' &
}

# Initialize the hash to an arbitrary value that will differ from the detected
# input hash so that the configuration is done at least once.
input_hash="INITIAL"
while :; do
	# Wait for changes in `xinput --list | grep keyboard`. This is a bit of a
	# hack. Alternatives would be to listen to `udevadm monitor` or to use
	# inputplug [1]
	# [1] https://unix.stackexchange.com/a/657718
	while :; do
		new_hash="$(xinput --list | grep keyboard | sha256sum)"
		if [[ "$new_hash" != "$input_hash" ]]; then
			input_hash="$new_hash"
			break
		fi
		sleep 3
	done
	echo "Keyboard inputs changed, reconfiguring keyboards."
	configure_keyboards
done
